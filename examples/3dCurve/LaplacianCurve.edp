 
meshL ThL3=Sline(40,[x,1,x*0.1]);
real[int] bb(6);
boundingbox(ThL3,bb);
cout << bb << endl; 
fespace Vh(ThL3,P2);
Vh p2=x*x+2*x*z+3*z*(z-1);
cout << " dxx "<< dxx(p2)(0.5,0,0.5) << endl; 
cout << " dxz "<< dxz(p2)(0.5,0,0.5) << endl; 
cout << " dzz "<< dzz(p2)(0.5,0,0.5) << endl; 

func f = 1 ;
macro Grad3(uh) [dx(uh),dy(uh),dz(uh)]  // EOM

Vh uLPb,vLPb;

// with problem
problem Lap3dL(uLPb,vLPb)  = int1d(ThL3)(Grad3(uLPb)'*Grad3(vLPb))
 - int1d ( ThL3 ) ( f * vLPb )
  + on(1,uLPb=0);
Lap3dL;
// verif.
cout << " len ThL3 = "<< int1d(ThL3)(1.) << endl; 
// P=[0.5,1,0.05]; to do

real uP=uLPb(0.5,1,0.05);

Vh uex = cos(x) * cosh(y) + sin(x) * sinh(y);
Vh vn = (1 - x) * uex(0,1,0) + x * uex(1,1,0) +4;

cout << nuTriangle<< endl; 
cout << uP << " " << " ~ " << uLPb[][40]<< endl;
// cout << uLPb(0.5,1,0.05) << endl; // to do also ..
cout << ThL3.mesure << endl; 
Vh u1=dx(uLPb),u2=dy(uLPb),u3=dz(uLPb);

plot(ThL3,uLPb);
