--- mshmet.2011.03.06/sources/mshmet.h	2011-02-11 19:41:49.000000000 +0100
+++ mshmet.2011.03.06/sourceslib/mshmet.h	2011-11-16 22:04:20.000000000 +0100
@@ -33,7 +33,7 @@
 #define MS_MAX(a,b)   ( ((a) < (b)) ? (b) : (a) )
 #define MS_MIN(a,b)   ( ((a) < (b)) ? (a) : (b) )
 
-char idir[5];
+extern char idir[5];
 
 typedef struct {
   double         c[3];
@@ -135,17 +135,17 @@
 pHash hashEdge_3d(pMesh mesh);
 pHash hashEdge_2d(pMesh mesh);
 
-int   (*boulep)(pMesh ,int ,int ,int *);
-int   (*hashel)(pMesh );
-int   (*gradLS)(pMesh ,pSol ,int ,int );
-int   (*hessLS)(pMesh ,pSol ,int ,int );
-int   (*avgval)(pMesh ,pSol ,int );
-int   (*clsval)(pMesh ,pSol ,int );
-int   (*nrmhes)(pMesh ,pSol ,int );
-int   (*redsim)(double *,double *,double *);
-int   (*defmet)(pMesh ,pSol ,int );
-double (*getSol)(pSol ,int ,int );
-int   (*metrLS)(pMesh mesh,pSol );
-int   (*lissag)(pMesh ,pSol , int ,int );
+extern int   (*boulep)(pMesh ,int ,int ,int *);
+extern int   (*hashel)(pMesh );
+extern int   (*gradLS)(pMesh ,pSol ,int ,int );
+extern int   (*hessLS)(pMesh ,pSol ,int ,int );
+extern int   (*avgval)(pMesh ,pSol ,int );
+extern int   (*clsval)(pMesh ,pSol ,int );
+extern int   (*nrmhes)(pMesh ,pSol ,int );
+extern int   (*redsim)(double *,double *,double *);
+extern int   (*defmet)(pMesh ,pSol ,int );
+extern double (*getSol)(pSol ,int ,int );
+extern int   (*metrLS)(pMesh mesh,pSol );
+extern int   (*lissag)(pMesh ,pSol , int ,int );
 
 #endif
--- mshmet.2012.04.25/sources/lplib3.c	2013-04-10 11:53:17.000000000 +0200
+++ mshmet.2012.04.25/sourceslib/lplib3.c	2013-04-10 11:54:49.000000000 +0200
@@ -30,7 +30,10 @@
 #include <assert.h>
 #include <errno.h>
 #include "lplib3.h"
-
+#ifdef __FreeBSD__
+#include <sys/types.h>
+#include <pmc.h>
+#endif
 
 /*----------------------------------------------------------*/
 /* Defines													*/
@@ -1250,6 +1253,7 @@
 		 * NPROC environment variable (BSD/OS, CrayOS)
 		 * sysctl hw.ncpu or kern.smp.cpus
 		 */
+	        int ncpu; 
 		if (pmc_init() == 0 && (ncpu = pmc_ncpu()) != -1)
 			maxthreads = ncpu;
 		else
