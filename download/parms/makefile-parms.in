abs_top_builddir = @abs_top_builddir@
WGET=@WGET@

# FFCS - let "make clean" work even if include file is not found
-include $(abs_top_builddir)/download/headers-sparsesolver.inc

# path for this directory 
PARMS_ROOT	= $(abs_top_builddir)/download/parms/pARMS_2.2

# name used for architecture 
ARCH	=	LINUX   
DARCH 	=	-D$(ARCH)

# variable to declare optimization level
# use '-g' to create libparms for debugging purposes
DBG     =      -O3

# to make pARMS name compatible with other linear algebra software
# such as PETSc, assign DCHNAME as: DCHNAME = -DPETSC
DCHNAME = 

# archive command
AR	= @AR@ #ar
ARFLAGS	= @ARFLAGS@ #cr
#====================================================================

#====================================================================
# Options for a generic LINUX configuration 
#################################
 CC	=	@MPICC@

 # FFCS - "-I MPI_INC_DIR" required on MacOS 10.8 MacPorts+OpenMPI
 CFLAGS	= $(DBG) $(DARCH) $(DCHNAME)  @CFLAGS@ -I "@MPI_INC_DIR@"

 INCLUDE_METIS =     #-I
 METIS_HOME  =       #-L/Users/morice/work/ParMetis-3.1.1/ -lparmetis -lmetis 

# fortran compiler / linker 
 FC	=	@MPIFC@

# ALH - add no-range-check for Windows (hexadecimal parameter constants like
# [[file:c:/cygwin/home/alh/ffcs/rel/mingw/mpif.h::PARAMETER MPI_SHORT_INT z 8c000003]]
# are rejected without this. See [[file:../../configure.ac::NO_RANGE_CHECK]]

 FFLAGS	= $(DBG)  $(DARCH)  @FFLAGS@ @NO_RANGE_CHECK@

# the directory of MPI library. for example -L/usr/local/mpich/lib
 LFLAGS_MPI 	= $(FFMPIINCLUDE) 
# the mpi library
 LIBS_MPI	= $(FFMPILIB)
# the directory of BLAS
 LFLAGS_BLAS	= $(FFBLASINCLUDE)
# the BLAS library
 LIBS_BLAS	= $(FFBLASLIB) @LIBSPTHREAD@  
#LINKER
 LINKER	=	$(FC)
#LINK OPTION
 LINK_OPT	=   #-nofor_main pour ifort compiler
