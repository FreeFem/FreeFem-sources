# -*- mode:diff;coding:raw-text; -*-
diff -u -p1 /home/alh/tmp/tetgen1.4.3/tetgen.cxx tetgen1.4.3/tetgen.cxx
--- /home/alh/tmp/tetgen1.4.3/tetgen.cxx	2009-12-13 22:21:08.000000000 +0100
+++ tetgen1.4.3/tetgen.cxx	2010-11-24 15:47:44.253943800 +0100
@@ -4844,3 +4844,3 @@ void tetgenmesh::dummyinit(int tetwords,
 {
-  unsigned long alignptr;
+  unsigned FFCSLONG alignptr;
 
@@ -4850,3 +4850,3 @@ void tetgenmesh::dummyinit(int tetwords,
   // Align 'dummytet' on a 'tetrahedrons->alignbytes'-byte boundary.
-  alignptr = (unsigned long) dummytetbase;
+  alignptr = (unsigned FFCSLONG) dummytetbase;
   dummytet = (tetrahedron *)
@@ -4875,3 +4875,3 @@ void tetgenmesh::dummyinit(int tetwords,
     // Align 'dummysh' on a 'subfaces->alignbytes'-byte boundary.
-    alignptr = (unsigned long) dummyshbase;
+    alignptr = (unsigned FFCSLONG) dummyshbase;
     dummysh = (shellface *)
@@ -15082,3 +15082,3 @@ void tetgenmesh::btree_insert(point inse
   point *ptary;
-  long arylen; // The array lenhgth is saved in ptary[0].
+  FFCSLONG arylen; // The array lenhgth is saved in ptary[0].
 
@@ -15087,3 +15087,3 @@ void tetgenmesh::btree_insert(point inse
   // Get the current array length.
-  arylen = (long) ptary[0];
+  arylen = (FFCSLONG) ptary[0];
   // Insert the point into the node.
@@ -15106,3 +15106,3 @@ void tetgenmesh::btree_search(point inse
   int ptsamples, ptidx;
-  long arylen;
+  FFCSLONG arylen;
   int i;
@@ -15112,3 +15112,3 @@ void tetgenmesh::btree_search(point inse
   // Get the current array length.
-  arylen = (long) ptary[0];
+  arylen = (FFCSLONG) ptary[0];
 
@@ -15165,3 +15165,3 @@ void tetgenmesh::ordervertices(point* ve
   point *ptary;
-  long arylen;
+  FFCSLONG arylen;
   int index, i, j;
@@ -15186,3 +15186,3 @@ void tetgenmesh::ordervertices(point* ve
     ptary = *jpptary;
-    arylen = (long) ptary[0];
+    arylen = (FFCSLONG) ptary[0];
     for (j = 2; j <= arylen; j++) { // Skip the first point.
@@ -21031,3 +21031,3 @@ bool tetgenmesh::delaunizecavity(arraypo
             printf("    Queue a subface x%lx (%d, %d, %d).\n", 
-              (unsigned long) checksh.sh, pointmark(sorg(checksh)),
+              (unsigned FFCSLONG) checksh.sh, pointmark(sorg(checksh)),
               pointmark(sdest(checksh)), pointmark(sapex(checksh)));
@@ -21081,3 +21081,3 @@ bool tetgenmesh::delaunizecavity(arraypo
                 printf("    Queue a subface x%lx (%d, %d, %d).\n", 
-                  (unsigned long) checksh.sh, pointmark(sorg(checksh)),
+                  (unsigned FFCSLONG) checksh.sh, pointmark(sorg(checksh)),
                   pointmark(sdest(checksh)), pointmark(sapex(checksh)));
@@ -23474,3 +23474,3 @@ bool tetgenmesh::carvecavity(list* newte
               printf("    Intet x%lx %d (%d, %d, %d, %d) is iversed.\n", 
-                (unsigned long) intet.tet, intet.loc, pointmark(pa),
+                (unsigned FFCSLONG) intet.tet, intet.loc, pointmark(pa),
                 pointmark(pb), pointmark(pc), pointmark(oppo(intet)));
@@ -23544,3 +23544,3 @@ bool tetgenmesh::carvecavity(list* newte
             pointmark(org(neightet)), pointmark(dest(neightet)),
-            pointmark(apex(neightet)), (unsigned long) auxsh.sh);
+            pointmark(apex(neightet)), (unsigned FFCSLONG) auxsh.sh);
           printf("  p:draw_tet(%d, %d, %d, %d) -- in\n",
@@ -33711,5 +33711,5 @@ int tetgenmesh::checksegments()
             printf("    Tet: x%lx (%d, %d, %d, %d) - Seg: x%lx (%d, %d).\n", 
-              (unsigned long) tetloop.tet, pointmark(org(tetloop)),
+              (unsigned FFCSLONG) tetloop.tet, pointmark(org(tetloop)),
               pointmark(dest(tetloop)), pointmark(apex(tetloop)),
-              pointmark(oppo(tetloop)), (unsigned long) sseg.sh,
+              pointmark(oppo(tetloop)), (unsigned FFCSLONG) sseg.sh,
               pointmark(pa), pointmark(pb));
@@ -33725,3 +33725,3 @@ int tetgenmesh::checksegments()
                 printf("    Tet: x%lx (%d, %d, %d, %d) - ", 
-                  (unsigned long) tetloop.tet, pointmark(org(tetloop)),
+                  (unsigned FFCSLONG) tetloop.tet, pointmark(org(tetloop)),
                   pointmark(dest(tetloop)), pointmark(apex(tetloop)),
@@ -33729,3 +33729,3 @@ int tetgenmesh::checksegments()
                 if (checkseg.sh != NULL) {
-                  printf("Seg x%lx (%d, %d).\n", (unsigned long) checkseg.sh,
+                  printf("Seg x%lx (%d, %d).\n", (unsigned FFCSLONG) checkseg.sh,
                   pointmark(sorg(checkseg)), pointmark(sdest(checkseg))); 
diff -u -p1 /home/alh/tmp/tetgen1.4.3/tetgen.h tetgen1.4.3/tetgen.h
--- /home/alh/tmp/tetgen1.4.3/tetgen.h	2009-12-13 22:20:33.000000000 +0100
+++ tetgen1.4.3/tetgen.h	2010-11-24 15:43:52.687137100 +0100
@@ -3318,5 +3318,12 @@ inline bool tetgenmesh::isfacehasedge(fa
 
+// FFCS: mingw64 compiler refuses to convert 8-byte pointers to 4-byte longs
+#ifdef WIN64
+#define FFCSLONG long long
+#else
+#define FFCSLONG long
+#endif
+
 inline bool tetgenmesh::issymexist(triface* t) {
   tetrahedron *ptr = (tetrahedron *) 
-    ((unsigned long)(t->tet[t->loc]) & ~(unsigned long)7l);
+    ((unsigned FFCSLONG)(t->tet[t->loc]) & ~(unsigned FFCSLONG)7l);
   return ptr != dummytet;
