//  run with MPI:  ff-mpirun -np 4 script.edp
// NBPROC 4

load "dSuperLU_DIST"

// FFCS - reference value for regressions tests
real regtest;

// read parameter for superlu from file
verbosity=2;
{

matrix A = 
      [[ 1e16,  2,     2,  1, 1],
       [ 2,    12,     0,  10 , 10],
       [ 2,     0,  1e16,  0, 2], 
       [ 1,     10,    0,  22, 0.],
       [ 1,     10,    2,  0., 22]];


    real[int] xx = [ 1,32,45,7,2], x(5), b(5), di(5); // xb(4),bbb(4);
    b=A*xx;
    cout << "b="  << b  << endl;
    cout << "xx=" << xx << endl;
  
    set(A,solver=sparsesolver,datafilename="ffsuperlu_dist_fileparam.txt");		
    cout << "solving solution" << endl;
    x = A^-1*b;		
    cout << "b=" << b << endl;
    cout << "x=" << endl; cout << x << endl;
    di = xx-x;
    if(mpirank==0){	
    cout << "x-xx="<< endl; cout << "Linf "<< di.linfty << " L2 " << di.l2 << endl;
    }
}

// read parameter for superlu from string and 
verbosity=2;
{

matrix A = 
      [[ 1e16,  2,     2,  1, 1],
       [ 2,    12,     0,  10 , 10],
       [ 2,     0,  1e16,  0, 2], 
       [ 1,     10,    0,  22, 0.],
       [ 1,     10,    2,  0., 22]];


    real[int] xx = [ 1,32,45,7,2], x(5), b(5), di(5); // xb(4),bbb(4);
    b=A*xx;
    cout << "b="  << b  << endl;
    cout << "xx=" << xx << endl;
  
    set(A,solver=sparsesolver,sparams="nprow=2,npcol=1,matrix=distributedglobal,ColPerm=MMD_AT_PLUS_A");		
    cout << "solving solution" << endl;
    x = A^-1*b;		
    cout << "b=" << b << endl;
    cout << "x=" << endl; cout << x << endl;
    di = xx-x;
    if(mpirank==0){	
    cout << "x-xx="<< endl; cout << "Linf "<< di.linfty << " L2 " << di.l2 << endl;
    regtest=di.l2;
    }
}

