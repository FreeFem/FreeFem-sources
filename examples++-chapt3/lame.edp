// file lame.edp
mesh Th=square(10,10,[10*x,y]);
fespace Vh(Th,P2);
Vh u,v,uu,vv;
macro e11(u,v) dx(u)//
macro e22(u,v) dy(v)//
macro e12(u,v) ( (dx(v) + dy(u))*.5) //

real E = 21.5e5, nu = 0.29e5, mu= E/(2*(1+nu));
real lambda = E*nu/((1+nu)*(1-2*nu)), gravity = -9.81;

solve lame([u,v],[uu,vv])= int2d(Th)( 
          2.*mu*( e11(u,v)*e11(uu,vv)+e12(u,v)*e12(uu,vv)+e22(u,v)*e22(uu,vv))
        + lambda*(e11(u,v)+e22(u,v))*(e11(uu,uu)+e22(vv,vv)) )
             - int2d(Th)(gravity*vv) + on(4,u=0,v=0);
plot([u,v],wait=1,ps="lamevect.ps");

mesh th1 = movemesh(Th, [x+u, y+v]);
 plot(th1,wait=1,ps="lamedeform.ps");
real dxmin  = u[].min; 
real dymin  = v[].min; 

cout << " - dep.  max   x ="<< dxmin<< " y=" << dymin << endl; 