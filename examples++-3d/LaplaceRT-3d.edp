/*
   Solving the following Poisson problem 
   Find $p$, such that;
   $ - \Delta p = f $   on $\Omega$, 
   $ dp / dn = (g1d,g2d). n  $ on $\Gamma_{123}$ 
   $ p = gd  $ on $\Gamma_{1}$ 
  with de Mixte finite element formulation 
   Find $p\in L^2(\Omega)   and $u\in H(div) $ such than  
    u - Grad p = 0
    - div u =  f
   $  u. n = (g1d,g2d). n  $ on $\Gamma_{123}$
   $ p = gd  $ on $\Gamma_{1}$

   the variationnel form is:
 $\forall v\in H(div)$;  $v.n = 0$ on $\Gamma_{4}\} $:    $ \int_\Omega  u v + p div v -\int_{\Gamma_{123}} gd* v.n  = 0 $

 $\forall q\in L^2$:   $  -\int_\Omega q div u = \int_Omega f q  $ 
and $ u.n = (g1n,g2n).n$ on $\Gamma_4$ 

*/
include "cube.idp"
    int[int]  Nxyz=[2,2,2];
    real [int,int]  Bxyz=[[0,1],[0,1],[0,1]];
    int [int,int]  Lxyz=[[1,1],[1,1],[1,1]];

mesh3 Th=Cube(Nxyz,Bxyz,Lxyz);
fespace Vh(Th,RT03d);
fespace Ph(Th,P0);

func gd = 1.;

func g1n = 1.;
func g2n = 1.; 
func g3n = 1.; 

func f = 1.;

Vh [u1,u2,u3],[v1,v2,v3];
[u1,u2,u3]=[100*x,100*y,100*z];
int k=Th(.1,.2,.3).nuTriangle ;
cout << " u = " << u1(.1,.2,.3)  << " " << u2(.1,.2,.3) << " " << u3(.1,.2,.3) << endl;
cout << " dx u = " << dx(u1)(.1,.2,.3)  << " " << dy(u2)(.1,.2,.3) << " " << dz(u3)(.1,.2,.3) << endl;
cout << " k = " << k << endl;
cout << Vh(k,0) << " " <<Vh(k,1) << " " <<Vh(k,2) << " " <<Vh(k,3) << endl;
cout << " df = " << u1[][Vh(k,0)] <<  " " << u1[][Vh(k,1)]  <<" " << u1[][Vh(k,2)]  << " " << u1[][Vh(k,2)] << endl;
// cout << u1[] << endl;


Ph p,q; 
macro div(u1,u2,u3) (dx(u1)+dy(u2)+dz(u3)) //
problem laplaceMixte([u1,u2,u3,p],[v1,v2,v3,q],solver=GMRES,eps=1.0e-10,tgv=1e30,dimKrylov=150) =
   int3d(Th)( p*q*1e-15+ u1*v1 + u2*v2 + u3*v3 + p*div(v1,v2,v3) + div(u1,u2,u3)*q )
 + int3d(Th) ( f*q)
 - int2d(Th,1,2,3)( gd*(v1*N.x +v2*N.y + v3*N.z) )  //  int on gamma 
 + on(4,u1=g1n,u2=g2n,u3=g3n);

 laplaceMixte;
// plot([u1,u2,u3],coef=0.1,wait=1,ps="lapRTuv.eps",value=true); 
 plot(p,fill=1,wait=1,ps="laRTp.eps",value=true);  
