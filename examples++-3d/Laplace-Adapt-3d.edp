
load "msh3"
load "tetgen"
load "mshmet"
load "freeyams"
load "mmg3d"
load "medit"

include "MeshSurface.idp"


 
int nn  = 6;

int[int] l1111=[1,1,1,1],l01=[0,1],l11=[1,1];
mesh Th = square(nn,nn,region=0,label=l1111);
savemesh(Th,"Th.mesh");

real zmin=0,zmax=1;
mesh3 Th3=buildlayers(square(nn,nn,region=0,label=l1111),
      nn,  zbound=[0,1],  labelmid=l11,   reffaceup = l01,  reffacelow = l01);

Th3 = trunc(Th3,(x<0.5) | (y < 0.5) | (z < 0.5) ,label=1);
medit("Th3",Th3,wait=1);
savemesh(Th3,"Th3.mesh");

fespace Vh(Th3,P1);
Vh u,v,usol,h;

macro Grad(u) [dx(u),dy(u),dz(u)] // EOM

problem Lapl(u,v,solver=CG) = int3d(Th3)( Grad(u)'*Grad(v) )  // ') for emacs 
  -int3d(Th3)( 1*v ) + on(1,u=0);


int[int] MSHloptions=[0,1,0,0,10,0,0];
real[int] MSHdoptions=[0.0001,0.1,0.01,0];

for(int ii=0; ii<4; ii++)
{
  Lapl;
  h=0;
  h[]=mshmet(Th3,u,loptions=MSHloptions,doptions=MSHdoptions);
  cout <<" h min, max = " <<  h[].min << " "<< h[].max << endl;
  medit("h",Th3,h,wait=1);
  plot(h,wait=1);
  MSHdoptions[0]*= 0.8;
  cout << " Th3" << Th3.nv < " " << Th3.nt << endl;
  Th3=tetgreconstruction(Th3,switch="raAQ",sizeofvolume=h*h*h/6.);
  medit("U-adap-iso",Th3,u,wait=1);
}



