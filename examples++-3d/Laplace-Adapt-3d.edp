
load "msh3"
load "tetgen"
load "mshmet"
load "medit"
 
int nn  = 6;

int[int] l1111=[1,1,1,1],l01=[0,1],l11=[1,1];//   label numbering 

mesh3 Th3=buildlayers(square(nn,nn,region=0,label=l1111),
      nn,  zbound=[0,1],  labelmid=l11,   labelup = l01,  labeldown = l01);
// remove the $]0.5,1[^3 cube$
Th3 = trunc(Th3,(x<0.5) | (y < 0.5) | (z < 0.5) ,label=1);

fespace Vh(Th3,P1);
Vh u,v,usol,h;

macro Grad(u) [dx(u),dy(u),dz(u)] // EOM

problem Poisson(u,v,solver=CG) = int3d(Th3)( Grad(u)'*Grad(v) )  // ') for emacs 
  -int3d(Th3)( 1*v ) + on(1,u=0);

int nbregu=1;
int[int]  MSHloptions=[0,1,0,0,verbosity,nbregu,0];
real[int] MSHdoptions=[1e-2,0.3,0.01,0];

for(int ii=0; ii<5; ii++)
{
  Poisson;
  h=0;
  cout <<" u min, max = " <<  u[].min << " "<< u[].max << endl;
  real cc=(u[].max-u[].min);// rescale coefficiant 
  h[]=mshmet(Th3,u/cc,loptions=MSHloptions,doptions=MSHdoptions);
  cout <<" h min, max = " <<  h[].min << " "<< h[].max << endl;
  plot(u,wait=1);
  MSHdoptions[0]*= 0.6;// change the level of error
  cout << " Th3" << Th3.nv < " " << Th3.nt << endl;
  Th3=tetgreconstruction(Th3,switch="raAQ",sizeofvolume=h*h*h/6.);
  medit("U-adap-iso-"+ii,Th3,u,wait=1);
}



