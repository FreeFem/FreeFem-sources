
# Using git  for FreeFem++ source files management
# ======================================================================
# Laboratoire Jacques-Louis Lions
# Universit√© Pierre et Marie Curie-Paris6, UMR 7598, Paris, F-75005 France
# ======================================================================
# This file is part of Freefem++
# 
# Freefem++ is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
# 
# Freefem++ is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with Freefem++; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
# ======================================================================
#+STARTUP: showeverything
# ======================================================================
# headeralh brief="Using git for FreeFem++ source files management" default=0 freefem multipleauthors org start=25/03/ upmc

The main difference with the previous CVS setup is that every working
copy of FreeFem++ contains a complete git database of all source
files (in a subdirectory called '.git').

* Creating a local copy of the FreeFem++ repository
** from the web in directory ff-git 
   git clone https://github.com/FreeFem/FreeFem-sources ff-git

** create the ~/.gitconfig   file  for commit like: 
[user] (change to your own name)
	name = Frederic Hecht
	email = frederic.hecht@upmc.fr
[push]
	default = simple


* Working with a repository

  All the commands below should be run from a directory of the current
  working copy.

** Adding a file
   git add filename
** Deleting a file
   hg remove filename
** Commiting all local changes to the local repository
   git commit -m "description of changes"
** Checking if there are some uncommitted local changes
   hg status

* Exchanging changes with other repositories
** Pulling changes from another (readable) repository
  hg checkout master -u http://www.freefem.org/ff++/ff++
  hg pull -u /another/local/dir
  hg pull -u ssh://myself@remotemachine/remote/directory

** Pushing changes into another (writable) repository branch 
  git push origin master
  change master to whatever branch you want to push your changes to. 
  
  repository to a remote server, you need to add it with
  git remote add origin <server>

** create a new branch named "feature_x" and switch to it using
     git checkout -b feature_x
   switch back to master
     git checkout master	 
   and delete the branch again
     git branch -d feature_x	
  a branch is not available to others unless you push the branch to your 
    git push origin <branch>


see http://rogerdudler.github.io/git-guide/ for  a guide	


* Compile FreeFem++ 
** first to restore build file.use (automake  > 1.13) 
 autoreconf -i 
** or extract  build with 
 tar zxvf AutoGeneratedFile.tar.gz 
** build makefies
./configure --enable-download
** to build 
make 
** to check (warning some test fail )
make check
** install
sudo make install 


* File info
# Local Variables:
# mode:org
# mode:visual-line
# ispell-local-dictionary:"british"
# coding:utf-8
# End:
