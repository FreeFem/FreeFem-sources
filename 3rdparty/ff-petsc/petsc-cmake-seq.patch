diff --color -Naur petsc-3.19.0-p1/config/BuildSystem/config/packages/SuperLU.py petsc-3.19.0/config/BuildSystem/config/packages/SuperLU.py
--- petsc-3.19.0-p1/config/BuildSystem/config/packages/SuperLU.py	2023-04-02 13:47:03
+++ petsc-3.19.0/config/BuildSystem/config/packages/SuperLU.py	2023-04-02 13:46:38
@@ -52,5 +52,11 @@
       if item.find('CMAKE_C_FLAGS') >= 0 or item.find('CMAKE_CXX_FLAGS') >= 0:
         args[place]=item[:-1]+' '+mangledef+'"'
 
+    mpicc = self.framework.getMakeMacro('MPICC_SHOW')
+    mpicxx = self.framework.getMakeMacro('MPICXX_SHOW')
+    if mpicc and mpicxx:
+        args = self.rmArgsStartsWith(args,['-DCMAKE_CXX_COMPILER','-DCMAKE_C_COMPILER'])
+        args.append('-DCMAKE_C_COMPILER="'+mpicc.split(None, 1)[0]+'"')
+        args.append('-DCMAKE_CXX_COMPILER="'+mpicxx.split(None, 1)[0]+'"')
     return args
 
diff --color -Naur petsc-3.19.0-p1/config/BuildSystem/config/packages/metis.py petsc-3.19.0/config/BuildSystem/config/packages/metis.py
--- petsc-3.19.0-p1/config/BuildSystem/config/packages/metis.py	2023-04-02 13:47:03
+++ petsc-3.19.0/config/BuildSystem/config/packages/metis.py	2023-04-02 13:46:38
@@ -44,6 +44,12 @@
     if self.framework.argDB['download-metis-use-doubleprecision']:
       args.append('-DMETIS_USE_DOUBLEPRECISION=1')
     args.append('-DMATH_LIB="'+self.libraries.toStringNoDupes(self.mathlib.lib)+'"')
+    mpicc = self.framework.getMakeMacro('MPICC_SHOW')
+    mpicxx = self.framework.getMakeMacro('MPICXX_SHOW')
+    if mpicc and mpicxx:
+        args = self.rmArgsStartsWith(args,['-DCMAKE_CXX_COMPILER','-DCMAKE_C_COMPILER'])
+        args.append('-DCMAKE_C_COMPILER="'+mpicc.split(None, 1)[0]+'"')
+        args.append('-DCMAKE_CXX_COMPILER="'+mpicxx.split(None, 1)[0]+'"')
     return args
 
   def configureLibrary(self):
diff --color -Naur petsc-3.19.0-p1/config/BuildSystem/config/packages/mmg.py petsc-3.19.0/config/BuildSystem/config/packages/mmg.py
--- petsc-3.19.0-p1/config/BuildSystem/config/packages/mmg.py	2023-04-02 13:47:03
+++ petsc-3.19.0/config/BuildSystem/config/packages/mmg.py	2023-04-02 13:46:38
@@ -28,6 +28,12 @@
     args.append('-DUSE_VTK=OFF')
     args.append('-DMMG_INSTALL_PRIVATE_HEADERS=ON')
     args.append('-DSCOTCH_DIR:STRING="'+self.ptscotch.directory+'"')
+    mpicc = self.framework.getMakeMacro('MPICC_SHOW')
+    mpicxx = self.framework.getMakeMacro('MPICXX_SHOW')
+    if mpicc and mpicxx:
+        args = self.rmArgsStartsWith(args,['-DCMAKE_CXX_COMPILER','-DCMAKE_C_COMPILER'])
+        args.append('-DCMAKE_C_COMPILER="'+mpicc.split(None, 1)[0]+'"')
+        args.append('-DCMAKE_CXX_COMPILER="'+mpicxx.split(None, 1)[0]+'"')
     if self.getDefaultIndexSize() == 64:
       int64_t = '''
 #if !(defined(PETSC_HAVE_STDINT_H) && defined(PETSC_HAVE_INTTYPES_H) && defined(PETSC_HAVE_MPI_INT64_T))
diff --color -Naur petsc-3.19.0-p1/src/mat/impls/aij/mpi/mumps/mumps.c petsc-3.19.0/src/mat/impls/aij/mpi/mumps/mumps.c
--- petsc-3.19.0-p1/src/mat/impls/aij/mpi/mumps/mumps.c	2023-04-02 13:46:55
+++ petsc-3.19.0/src/mat/impls/aij/mpi/mumps/mumps.c	2023-04-02 13:46:45
@@ -1889,11 +1889,7 @@
      see https://github.com/pmodels/mpich/issues/5589. This bug was fixed by https://github.com/pmodels/mpich/pull/5590.
      In short, we could not use distributed RHS with MPICH until v4.0b1.
    */
-#if PETSC_PKG_MUMPS_VERSION_LT(5, 3, 0) || (defined(PETSC_HAVE_MPICH_NUMVERSION) && (PETSC_HAVE_MPICH_NUMVERSION < 40000101))
   mumps->ICNTL20 = 0; /* Centralized dense RHS*/
-#else
-  mumps->ICNTL20     = 10; /* Distributed dense RHS*/
-#endif
   PetscCall(PetscOptionsMUMPSInt("-mat_mumps_icntl_20", "ICNTL(20): give mumps centralized (0) or distributed (10) dense right-hand sides", "None", mumps->ICNTL20, &mumps->ICNTL20, &flg));
   PetscCheck(!flg || mumps->ICNTL20 == 10 || mumps->ICNTL20 == 0, PETSC_COMM_SELF, PETSC_ERR_SUP, "ICNTL(20)=%d is not supported by the PETSc/MUMPS interface. Allowed values are 0, 10", (int)mumps->ICNTL20);
 #if PETSC_PKG_MUMPS_VERSION_LT(5, 3, 0)
diff --color -Naur petsc-3.19.0-p1/config/BuildSystem/config/packages/PTScotch.py petsc-3.19.0/config/BuildSystem/config/packages/PTScotch.py
--- petsc-3.19.0-p1/config/BuildSystem/config/packages/PTScotch.py	2023-04-02 13:47:03
+++ petsc-3.19.0/config/BuildSystem/config/packages/PTScotch.py	2023-04-02 13:46:38
@@ -9,6 +9,8 @@
     self.download         = ['git://https://gitlab.inria.fr/scotch/scotch.git',
                              'https://gitlab.inria.fr/scotch/scotch/-/archive/'+self.gitcommit+'/scotch-'+self.gitcommit+'.tar.gz',
                              'http://ftp.mcs.anl.gov/pub/petsc/externalpackages/scotch-'+self.gitcommit+'.tar.gz']
+    self.download_macos   = ['https://gitlab.inria.fr/scotch/scotch/-/archive/v6.1.2/scotch-v6.1.2.tar.gz',
+                             'http://ftp.mcs.anl.gov/pub/petsc/externalpackages/scotch-v6.1.2.tar.gz']
     self.downloaddirnames = ['scotch','petsc-pkg-scotch']
     self.liblist          = [['libptesmumps.a','libptscotchparmetisv3.a','libptscotch.a','libptscotcherr.a','libesmumps.a','libscotch.a','libscotcherr.a'],['libptesmumps.a','libptscotchparmetis.a','libptscotch.a','libptscotcherr.a','libesmumps.a','libscotch.a','libscotcherr.a'],
                              ['libptesmumps.a','libptscotchparmetis.a','libptscotch.a','libptscotcherr.a','libesmumps.a','libscotch.a','libscotcherr.a']]
@@ -30,13 +32,18 @@
     self.odeps          = [self.pthread,self.zlib,self.bison]
     return
 
+  def configureLibrary(self):
+    if not self.bison.haveBison3plus:
+      self.download = self.download_macos
+    config.package.Package.configureLibrary(self)
+
   def Install(self):
     import os
 
     if not hasattr(self.programs, 'flex'):
       self.programs.getExecutable('flex', getFullPath = 1)
     if not hasattr(self.programs, 'flex'): raise RuntimeError('PTScotch needs flex installed')
-    if not self.bison.found or not self.bison.haveBison3plus: raise RuntimeError('PTScotch needs Bison version 3.0 or above, use --download-bison')
+    if not self.bison.found: raise RuntimeError('PTScotch needs Bison, use --download-bison')
 
     self.log.write('Creating PTScotch '+os.path.join(os.path.join(self.packageDir,'src'),'Makefile.inc')+'\n')
 
@@ -93,8 +100,12 @@
     g.write('MKDIR    = '+self.programs.mkdir+'\n')
     g.write('MV       = '+self.programs.mv+'\n')
     g.write('RANLIB   = '+self.setCompilers.RANLIB+'\n')
-    g.write('FLEX     = '+self.programs.flex+'\n')
-    g.write('BISON    = '+getattr(self.bison,self.bison.executablename)+' -y\n')
+    if not self.bison.haveBison3plus:
+      g.write('LEX      = '+self.programs.flex+'\n')
+      g.write('YACC     = '+getattr(self.bison,self.bison.executablename)+' -y\n')
+    else:
+      g.write('FLEX     = '+self.programs.flex+'\n')
+      g.write('BISON    = '+getattr(self.bison,self.bison.executablename)+' -y\n')
     g.close()
 
     self.popLanguage()
