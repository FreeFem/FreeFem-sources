// file heatex.edp
load "glumesh2D"
load "glumesh3D"
load "tetgen"
load "buildlayer"

// Test 1

int C1=99, C2=98; // could be anything

border C01(t=0,pi){ x=t;  y=0;      label=1;}
border C02(t=0,2*pi){ x=pi; y=t;  label=1;}
border C03(t=0,pi){ x=pi-t;  y=2*pi;    label=1;}
border C04(t=0,2*pi){ x=0;    y=2*pi-t; label=1;}


border C11(t=0,0.7){ x=0.5+t;  y=2.5;      label=C1;}
border C12(t=0,2){ x=1.2;    y=2.5+t;  label=C1;}
border C13(t=0,0.7){ x=1.2-t;  y=4.5;     label=C1;}
border C14(t=0,2){ x=0.5;    y=4.5-t; label=C1;}


border C21(t=0,0.7){ x= 2.3+t;     y=2.5;  label=C2;}
border C22(t=0,2){        x=3;   y=2.5+t;  label=C2;}
border C23(t=0,0.7){   x=3-t;     y=4.5;  label=C2;}
border C24(t=0,2){       x=2.3;   y=4.5-t; label=C2;}

mesh Th=buildmesh(    C01(10)+C02(10)+ C03(10)+C04(10)
                    + C11(5)+C12(5)+C13(5)+C14(5) 
                    + C21(-5)+C22(-5)+C23(-5)+C24(-5));

mesh Ths=buildmesh(    C01(10)+C02(10)+ C03(10)+C04(10)
                    + C11(5)+C12(5)+C13(5)+C14(5) );
                    
savemesh(Th,"2domaine_th2.mesh");

// version cylindre
func zmin=0.;
func zmax=1.;

int MaxLayer=10;

func XX = x*cos(y);
func YY = x*sin(y);
func ZZ = z;

int[int] r1=[0,41],  r2=[98,98,99,99,1,56], r3=[4,12], r4=[4,45];

mesh3 Th3=buildlayers(Th,3,zbound=[zmin,zmax], reftet=r1, reffacemid=r2, reffaceup = r3, reffacedown = r4 ); //,transfo=[XX,YY,ZZ]); 

cout << "fin build layers " << endl;

int[int] r1i=[41,188],  r2i=[98,38, 99,32, 12,15, 45,37];
cout << "debut change3D " << endl;
mesh3 Th3bis=change3D(Th3,reftet=r1i,refface=r2i);
cout << "fin change3D " << endl;

savemesh(Th3,"2domaine_cylinder.mesh");
savemesh(Th3bis,"3domaine_cylinder.mesh");
                   
// version sphere
func XX1 = cos(y)*sin(x);
func YY1 = sin(y)*sin(x);
func ZZ1 = cos(x);

mesh3 Th3sph=tetgtransfo(Ths,transfo=[XX1,YY1,ZZ1]);
savemesh(Th3sph,"2domaine_sphere.mesh");

