// file movemesh_rempli.edp
load "glumesh3D"
load "tetgen"

real x0=0., x1=1., y0=0., y1=1.;
mesh Th1 = square(4,4,[x0+(x1-x0)*x,y0+(y1-y0)*y]);
func ZZ1min = 0;
func ZZ1max = 1;
func XX1 = x;
func YY1 = y;

// build the differents face of cube

mesh3 Th31h = movemesh2D3Dsurf(Th1,transfo=[XX1,YY1,ZZ1max]);

mesh3 Th31b = movemesh2D3Dsurf(Th1,transfo=[XX1,YY1,ZZ1min]);

mesh3 Th32h = movemesh2D3Dsurf(Th1,transfo=[XX1,ZZ1max,YY1]);  

mesh3 Th32b = movemesh2D3Dsurf(Th1,transfo=[XX1,ZZ1min,YY1]);

mesh3 Th33h = movemesh2D3Dsurf(Th1,transfo=[ZZ1max,XX1,YY1]);  

mesh3 Th33b = movemesh2D3Dsurf(Th1,transfo=[ZZ1min,XX1,YY1]); 

mesh3 Th33 = Th31h+Th31b+Th32h+Th32b+Th33h+Th33b; // "gluing" surface meshs to obtain the surface of cube
savemesh(Th33,"Th33.mesh");

real[int] domaine =[0.5,0.5,0.5,145,0.01];
mesh3 Thfinal = tetg(Th33,switch="pqAYY",nbofregions=1,regionlist=domaine);    // Tetrahelize the interior of the cube with tetgen
savemesh(Thfinal,"Thfinal.mesh");

func mv1x = 1+x;
func mv1y = 2*pi*y;
func mv1z = 1.5*z;
cout << "============================" <<endl;
cout << "============================" <<endl;
cout << "============================" <<endl;

mesh3 Thmv1 = movemesh3D(Thfinal, transfo=[mv1x,mv1y,mv1z]);
// build a mesh of a half cylindrical shell of interior radius 1. and exterior radius 2 and heigh 1.5
func mv2x = x*cos(y);
func mv2y = x*sin(y);
func mv2z = z;
mesh3 Thmv2 = movemesh3D(Thmv1, transfo=[mv2x,mv2y,mv2z]);
savemesh(Thmv2,"halfcylindricalshell.mesh");
