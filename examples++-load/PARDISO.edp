load "PARDISO" 
load "symmetrizeCSR"
load "shell"
//if(ompgetnumthreads() < 2 & getenv("OMP_NUM_THREAD") =="" ) 
//  ompsetnumthreads(10);// set number of thread for PARDISO ..  
//cout << " OMP NUM THREAD = " << ompgetnumthreads()  << " " << ompgetmaxthreads() << endl;; 
int[int] l = [1, 1, 2, 2];
mesh Th = square(150, 150, label = l);
fespace Vh(Th, P2);
Vh u, v;
varf lap(u,v) = int2d(Th)(dx(u)*dx(v) + dy(u)*dy(v)) + int2d(Th)(v) + on(1, u = 1);
real[int] b = lap(0, Vh);
matrix A = lap(Vh, Vh);
matrix B = A; //lap(Vh, Vh,solver=CG);;
symmetrizeCSR(B);
verbosity = 2;
// If you want, you can pass an array of integer (int[int] t)
// for specifying the type of the matrix you want to factorize
//
// You really should not though, as FreeFem++ will automatically
// set the solver to either LU or LDL^T
// lparams = t
set(A, solver = sparsesolver);
set(B, solver = sparsesolver);
verbosity = 0;
Vh x;
x[] = A^-1 * b;
plot(Th, x, wait = 1, dim = 3, fill = 1, cmm = "sparsesolver unsymmetric", value = 1);
x[] = B^-1 * b;
plot(Th, x, wait = 1, dim = 3, fill = 1, cmm = "sparsesolver symmetric", value = 1);
