load "Element_P1ncdc"
load "Element_P1dc1"
load "msh3"
int errT=0; 

macro Test(Th,FE,nFE)
{
int err=0; 	
fespace Wh(Th,FE);
Wh u=x,v,w;

for(int i=0; i< Wh.ndof;++i)
{
	u=0;
	u[][i]=1;
	v=u;
	v[]-=u[];
	err += v[].linfty>1e-7;
}
cout << " ** " << nFE << " Nb err = "<< err<< endl; 
errT += err;
}
// 

mesh Th=square(1,1);

{
	fespace Vh(Th,P1dcnc);

Vh u=x;

for(int i=0; i< Vh.ndof;++i)
{
	u=0;
	u[][i]=1;
plot(u,wait=1,cmm="dof="+i,fill=1,dim=3);

}
varf vm(u,v)= int2d(Th,qforder=3)(u*v);
matrix M=vm(Vh,Vh);
//cout << M << endl; 
}
//	Test(Th,P1dcnc,"P1dcnc")
Test(Th,P1dc,"P1dc")
Test(Th,P1dc1,"P1dc1")

mesh3 Th3=cube(1,1,1);

Test(Th3,P1dc3d,"P1dc3d")
Test(Th3,P1dc3d1,"P1dc3d1")

assert(errT==0);